====== BuildBot ======

===== Setting up master on WebFaction =====

==== virtualenv ====

Download the tarball from [[http://pypi.python.org/pypi/virtualenv/]] and untar to a temporary directory; then, in that directory run ''python2.7 setup.py install --dry-run''. If it complains about missing directories create them. Continue running with ''--dry-run'' until it passes, then run without ''--dry-run''. Once done you should have ''virtualenv'' script in ''~/bin''. You can then delete the temporary directory and the tarball. 

==== buildbot ====

Follow [[http://buildbot.net/buildbot/tutorial/firstrun.html#creating-a-master|the tutorial]]. I installed BuildBot in ''~/opt/buildbot'' instead of suggested ''~/tmp/buildbot'', other that I followed it to the letter.

==== status website ====

In WebFaction panel create a new custom application and make note of the port assigned to it. Then set up a domain name and a website for this application. In my case:

^ Application ^ name       | wxhaskellbuild |
^ :::         ^ port       | 30146 (assigned by WebFaction) |
^ Domain      ^ name       | build.bimbr.com |
^ Website     ^ name       | bimbr_build |
^ :::         ^ subdomains | build.bimbr.com |
^ :::         ^ site apps  | **app**: wxhaskellbuild, **URL path**: /wxhaskell |

Edit ''~/opt/buildbot/sandbox/master/master.cfg'' and change the ''http_port'' in ''c['status'].append(html.WebStatus(http_port=8010, authz=authz_cfg))'' to the port assigned to your new application (30146 in my case).

It might take about 30 mins for your new website to become accessible. Then you should be able to access the website under http://build.bimbr.com/wxhaskell/

==== slave connections ====

  * Requires dedicated IP and open port for non-HTTP traffic

TODO

==== process monitoring ====

<code bash>
#!/bin/bash

# starts the buildbot master if it's not running already

HOME=/home/mmakowski

ps -ef | grep 'buildbot start master' | grep -vq grep
RUNNING=$?
if [ $RUNNING -ne 0 ]
then
    cd $HOME/opt/buildbot
    source sandbox/bin/activate
    cd sandbox
    buildbot start master
fi
</code>

crontab -e

add entry:

<code>
*       *       *       *       *       /home/mmakowski/bin/buildbot-start-master-if-not-running &
</code>

===== Setting up slave on Windows =====

Python 2.7 64 bit
Pywin32 
easy_install as per http://pypi.python.org/pypi/setuptools#windows
easy_install zope.interface
http://twistedmatrix.com/trac/wiki/Downloads
unzip buildbot to temp dir and run setup.py install (easy_install didn't work)

<code>
c:\Python27\Scripts\buildslave create-slave slave buildbot.bimbr.com:9989 windows-64bit-wx2.8 pass
</code>
TODO
  - set up slave on the laptop and make the two work together
  - set up slave on EC2 and make it work with the master

===== Setting up latent slave on EC2 =====

follow http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/ to set up a windws box
install everything required to build manually and check that the build works
install everything as per local host

run as a service http://nyc-dba.blogspot.com/2008/10/running-buildbot-buildslave-as-windows.html
buildbot_slave_service.py install
run automatically (delayed start), as administrator

===== Configuring Master to start up the EC2 slave =====

easy_install boto

modify ''sandbox/lib/python2.7/site-packages/buildbot-0.8.4p2-py2.7.egg/buildbot/ec2buildslave.py'' to do ''instance.terminate()'' instead of ''instance.stop()'' -- otherwise the instances will be left stopped and still charging  storage to your account!

