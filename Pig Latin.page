A high-level language on top of [Hadoop]().

## Operators

### GROUP

Groups records by specified field:

~~~
A ~ {(1,2), (1,3), (2,4)}

B = group A by $0;

B ~ {(1, {(1,2), (1,3)}),
     (2, {(2,4)})}
~~~

### COGROUP

Groups on multiple data sets:

~~~
A ~ {(1,2), (1,3), (2,4)}

B ~ {(1,5), (2,6), (3,7)}

C = cogroup A by $0, B by $0;

C ~ {(1, {(1,2), (1,3)}, {(1,5)}),
     (2, {(2,4)},        {(2,6)}),
     (3, {},             {(3,7)})}
~~~

### JOIN

Joins two or more data sets on matching fields:

~~~
A ~ {(1,2), (1,3), (2,4)}

B ~ {(1,5), (2,6), (3,7)}

C = join A by $0, B by $0;

C ~ {(1,2,1,5),
     (1,3,1,5),
     (2,4,2,6)}
~~~

**Note:** COGROUP is one-step process, JOIN requires two steps, grouping and flattening. Use COGROUP if sufficient as it's more efficient:

~~~
temp = cogroup A by $0, B by $0;
join_result = foreach temp generate flatten($1), flatten($2);
~~~

## Parallelism

By default Pig will work out the number of required mappers based on the input data, but will only spin off a single reducer. To increase the reduction parallelism specify `PARALLEL` clause:

~~~
histogram = foreach by_subject generate flatten($0), count($1) as count parallel 50;
~~~

## References

* [Documentation](http://pig.apache.org/docs/r0.7.0/piglatin_ref2.html)
* [Data Science course lecture](https://class.coursera.org/datasci-001/lecture/119)