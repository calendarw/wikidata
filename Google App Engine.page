## Creating a Scala project

Mostly based on [app engine SBT plug-in readme](https://github.com/sbt/sbt-appengine) and [sample](https://github.com/sbt/sbt-appengine/tree/master/src/sbt-test/sbt-appengine/simple).

### create a new sbt project

#### `build.sbt`

---------------------------------------

~~~ { .scala }
import sbtappengine.Plugin.{AppengineKeys => gae}

name := "appname"

libraryDependencies ++= Seq(
  "javax.servlet"     %  "servlet-api"       % "2.3"    % "provided",
  "org.mortbay.jetty" %  "jetty"             % "6.1.22" % "container"
)

seq(appengineSettings: _*)
~~~

---------------------------------------

#### `project/plugins.sbt`

---------------------------------------


~~~ { .scala }
addSbtPlugin("com.eed3si9n" % "sbt-appengine" % "0.4.0")

resolvers ++= Seq(
  "spray repo" at "http://repo.spray.cc",
  Resolver.url("sbt-plugin-releases", url("http://scalasbt.artifactoryonline.com/scalasbt/sbt-plugin-releases/"))(Resolver.ivyStylePatterns)
)
~~~

---------------------------------------

### set APPENGINE_SDK_HOME env var

#### `setenv`

---------------------------------------

~~~ { .shell }
#!/bin/sh

export APPENGINE_SDK_HOME=/Applications/appengine-java-sdk-1.6.2.1
~~~

---------------------------------------

now, after running `. setenv`, `sbt` should start succesfully.

### create directory structure

~~~
src
 +-- main
      +--- scala
      +--- webapp
            +----- WEB-INF
~~~

### create app engine files

#### `src/main/webapp/WEB-INF/appengine-web.xml`

---------------------------------------

~~~ { .xml }
<?xml version="1.0" encoding="UTF-8"?>
<appengine-web-app 
        xmlns="http://appengine.google.com/ns/1.0" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xsi:schemaLocation="http://kenai.com/projects/nbappengine/downloads/download/schema/appengine-web.xsd appengine-web.xsd">
    <application>appname</application>
    <version>1</version>

    <!-- Change to false if your code is not threadsafe.
         See https://developers.google.com/appengine/docs/java/config/appconfig#Using_Concurrent_Requests -->
    <threadsafe>true</threadsafe>

    <precompilation-enabled>true</precompilation-enabled>
</appengine-web-app>
~~~

---------------------------------------

#### `src/main/webapp/WEB-INF/web.xml`

---------------------------------------

~~~ { .xml }
<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
        version="2.5">
    <display-name>My App</display-name>

    <servlet>
        <servlet-name>ping</servlet-name>
        <servlet-class>com.myapp.Ping</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>ping</servlet-name>
        <url-pattern>/ping</url-pattern>
    </servlet-mapping>

    <security-constraint>
        <web-resource-collection>
        	<web-resource-name>secured</web-resource-name>
            <url-pattern>/ping</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
</web-app>
~~~

---------------------------------------

