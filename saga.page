In [event sourcing]() context, saga is a component that handles transactions that span multiple messages (a.k.a. "long-running transactions"). According to [Jonathan Oliver's blog post](http://blog.jonathanoliver.com/2010/09/cqrs-sagas-with-event-sourcing-part-i-of-ii/), saga should not encapsulate business logic but a state machine. An example he gives is where the _PaymentReceived_ message arrives before _OrderPlaced_.

## References

* [Jonathan Oliver's blog post](http://blog.jonathanoliver.com/2010/09/cqrs-sagas-with-event-sourcing-part-i-of-ii/)

