
---
categories: it scala
...

_presentation by Trond Bjerkestrand from Typesafe; chaotic, not well thought out and rehearsed_

Scala's answer to [LINQ](). Originated with ScalaQuery and borrowed from Scala Integrated Query.

## Convenient execution of arbitrary SQL

~~~ {.scala}
import scala.slic.driver.MySQLDriver.simple._
import scala.slick.jdbc._
import Q.interpolation
import scala.slick.session.Database

objet RawSql {
  val db = Database.forUrl("...")
  implicit val session: Session = db.createSession

  // we can use string interpolation to create a SQL statement
  sqlu"CREATE TABLE user(username, email)" execute

  sql"select * from user".as[(String, String)] list
}
~~~

## Type-safe table definitions

~~~ {.scala}
case class User(username: String, email: String /*...*/ )

object User extends Table[User]("user") {
  val id = column[Int]("id", O.AutoInc, O.PrimaryKey)
  val username = column[String]("username")
  val email = 
  // ...
  val uniqueUsername = index("uniqueUsername", username, unique = true)
  val * = id ~ username ~ email <> (User.apply _, User.unapply _) // can provide arbitrary construction/deconstruction functions

  def byId(id: Int)(implicit session: Session) = createFinderBy(_.id).firstOption(id)
}

object Queries {
  // print out DDL
  User.ddl.createStatements.foreach(println)

  // insert
  User.insert(User("trond", "trond@typesafe.com")) // TODO: do we need to call anything else to have this execute?

  // select
  val query = for { user <- User if user.email is "trond@typesafe.com" } yield user
  query.selectStatement // this didn't work in the demo
}
~~~

## Mapping enums

~~~ {.scala}
trait DBEnum {
  val ordered: Seq[EnuerationValue]
  lazy val toDbType: String = s"ENUM${ordered.mkString("('", "', '")}
}

object UserType extends Enumeration with DBEnum {
  // ... ?
}

object User extends Table[User] {
  // ...
  val userType = column[String]("level", O.DBType(UserType.toDbType))
  // ...	
}
~~~

Seems like there is a lot of features, but the talk does not sell them well at all. The [website](http://slick.typesafe.com/) looks like a better introduction.
